<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.role.SysRoleInfoMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.model.SysRoleInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_uuid" property="roleUuid" jdbcType="VARCHAR" />
    <result column="role_rname" property="roleRname" jdbcType="VARCHAR" />
    <result column="role_code" property="roleCode" jdbcType="VARCHAR" />
    <result column="creation_time" property="creationTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_uuid, role_rname, role_code, creation_time, update_time, is_delete
  </sql>
  <select id="query" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_info info
    where 1=1
    and info.is_delete=0
  </select>
    <select id="getRoleList" resultMap="BaseResultMap" >
   SELECT <include refid="Base_Column_List" /> FROM `sys_role_info`  info WHERE info.`is_delete`=0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_role_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.SysRoleInfo" >
    insert into sys_role_info (id, role_uuid, role_rname, 
      role_code, creation_time, update_time, 
      is_delete)
    values (#{id,jdbcType=BIGINT}, #{roleUuid,jdbcType=VARCHAR}, #{roleRname,jdbcType=VARCHAR}, 
      #{roleCode,jdbcType=VARCHAR}, #{creationTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{isDeleted,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.SysRoleInfo" >
    insert into sys_role_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleUuid != null" >
        role_uuid,
      </if>
      <if test="roleRname != null" >
        role_rname,
      </if>
      <if test="roleCode != null" >
        role_code,
      </if>
      <if test="creationTime != null" >
        creation_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleUuid != null" >
        #{roleUuid,jdbcType=VARCHAR},
      </if>
      <if test="roleRname != null" >
        #{roleRname,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.SysRoleInfo" >
    update sys_role_info
    <set >
      <if test="roleUuid != null" >
        role_uuid = #{roleUuid,jdbcType=VARCHAR},
      </if>
      <if test="roleRname != null" >
        role_rname = #{roleRname,jdbcType=VARCHAR},
      </if>
      <if test="roleCode != null" >
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="creationTime != null" >
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.SysRoleInfo" >
    update sys_role_info
    set role_uuid = #{roleUuid,jdbcType=VARCHAR},
      role_rname = #{roleRname,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>